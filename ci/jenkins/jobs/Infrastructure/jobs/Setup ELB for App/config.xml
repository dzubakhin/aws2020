<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.31">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@1.3.4.1"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@1.3.4.1">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <org.datadog.jenkins.plugins.datadog.DatadogJobProperty plugin="datadog@0.6.5">
      <emitOnCheckout>false</emitOnCheckout>
    </org.datadog.jenkins.plugins.datadog.DatadogJobProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.ChoiceParameterDefinition>
          <name>environment</name>
          <description></description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>qa</string>
              <string>prod</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.62">
    <script>pipeline {
  agent any
  stages{
    stage(&apos;Checkout&apos;){
      steps{
        git url: &apos;https://github.com/babinskiy/AWS_Demo_project.git&apos;
      }

    }
    stage(&apos;Upload&apos;){
      steps{
        s3Upload consoleLogLevel: &apos;INFO&apos;, dontWaitForConcurrentBuildCompletion: false, entries: [[bucket: &apos;30daysdevops/dropwizard/infracrtructure/&apos;, excludedFile: &apos;&apos;, flatten: false, gzipFiles: false, keepForever: false, managedArtifacts: false, noUploadOnFailure: false, selectedRegion: &apos;us-east-1&apos;, showDirectlyInBrowser: false, sourceFile: &apos;ops/cloudformation/app_ELB.yml&apos;, storageClass: &apos;STANDARD&apos;, uploadFromSlave: false, useServerSideEncryption: false]], pluginFailureResultConstraint: &apos;FAILURE&apos;, profileName: &apos;S3BucketPublisher&apos;, userMetadata: []
      }
    }
  }
}
</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>